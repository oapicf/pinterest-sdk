/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  CatalogsCreateRequest,
  CatalogsReportParameters,
  ItemsIssuesList200Response,
  CatalogsItemsRequest,
  FeedProcessingResultsList200Response,
  CatalogsReport,
  ReportsStats200Response,
  FeedsUpdateRequest,
  FeedsCreateRequest,
  CatalogsItemsBatch,
  CatalogsListProductsByFilterRequest,
  CatalogsItemsFilters,
  CatalogsProductGroupsList200Response,
  CatalogsFeedIngestion,
  CatalogsItems,
  CatalogsList200Response,
  Catalog,
  CatalogsProductGroupPinsList200Response,
  CatalogsProductGroupProductCountsVertical,
  FeedsList200Response,
  MultipleProductGroupsInner,
  CatalogsVerticalProductGroup,
  CatalogsProductGroupsUpdateRequest,
  ItemsBatchPostRequest,
  CatalogsItemValidationIssue,
  CatalogsCreateReportResponse,
  CatalogsFeed,
} from './models';

/**
 * catalogsCreate - parameters interface
 */
export interface ICatalogsCreateParams {
  catalogsCreateRequest: CatalogsCreateRequest;
  adAccountId?: string;
}

/**
 * catalogsList - parameters interface
 */
export interface ICatalogsListParams {
  bookmark?: string;
  pageSize?: number;
  adAccountId?: string;
}

/**
 * catalogsProductGroupPinsList - parameters interface
 */
export interface ICatalogsProductGroupPinsListParams {
  productGroupId: string;
  bookmark?: string;
  pageSize?: number;
  adAccountId?: string;
  pinMetrics?: boolean;
}

/**
 * catalogsProductGroupsCreate - parameters interface
 */
export interface ICatalogsProductGroupsCreateParams {
  multipleProductGroupsInner: MultipleProductGroupsInner;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsCreateMany - parameters interface
 */
export interface ICatalogsProductGroupsCreateManyParams {
  multipleProductGroupsInner: Array<MultipleProductGroupsInner>;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsDelete - parameters interface
 */
export interface ICatalogsProductGroupsDeleteParams {
  productGroupId: string;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsDeleteMany - parameters interface
 */
export interface ICatalogsProductGroupsDeleteManyParams {
  id: Array<number>;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsGet - parameters interface
 */
export interface ICatalogsProductGroupsGetParams {
  productGroupId: string;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsList - parameters interface
 */
export interface ICatalogsProductGroupsListParams {
  id?: Array<number>;
  feedId?: string;
  catalogId?: string;
  bookmark?: string;
  pageSize?: number;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsProductCountsGet - parameters interface
 */
export interface ICatalogsProductGroupsProductCountsGetParams {
  productGroupId: string;
  adAccountId?: string;
}

/**
 * catalogsProductGroupsUpdate - parameters interface
 */
export interface ICatalogsProductGroupsUpdateParams {
  productGroupId: string;
  catalogsProductGroupsUpdateRequest: CatalogsProductGroupsUpdateRequest;
  adAccountId?: string;
}

/**
 * feedProcessingResultsList - parameters interface
 */
export interface IFeedProcessingResultsListParams {
  feedId: string;
  bookmark?: string;
  pageSize?: number;
  adAccountId?: string;
}

/**
 * feedsCreate - parameters interface
 */
export interface IFeedsCreateParams {
  feedsCreateRequest: FeedsCreateRequest;
  adAccountId?: string;
}

/**
 * feedsDelete - parameters interface
 */
export interface IFeedsDeleteParams {
  feedId: string;
  adAccountId?: string;
}

/**
 * feedsGet - parameters interface
 */
export interface IFeedsGetParams {
  feedId: string;
  adAccountId?: string;
}

/**
 * feedsIngest - parameters interface
 */
export interface IFeedsIngestParams {
  feedId: string;
  adAccountId?: string;
}

/**
 * feedsList - parameters interface
 */
export interface IFeedsListParams {
  bookmark?: string;
  pageSize?: number;
  catalogId?: string;
  adAccountId?: string;
}

/**
 * feedsUpdate - parameters interface
 */
export interface IFeedsUpdateParams {
  feedId: string;
  feedsUpdateRequest: FeedsUpdateRequest;
  adAccountId?: string;
}

/**
 * itemsBatchGet - parameters interface
 */
export interface IItemsBatchGetParams {
  batchId: string;
  adAccountId?: string;
}

/**
 * itemsBatchPost - parameters interface
 */
export interface IItemsBatchPostParams {
  itemsBatchPostRequest: ItemsBatchPostRequest;
  adAccountId?: string;
}

/**
 * itemsGet - parameters interface
 */
export interface IItemsGetParams {
  country: string;
  language: string;
  adAccountId?: string;
  itemIds?: Array<string>;
  filters?: CatalogsItemsFilters;
}

/**
 * itemsIssuesList - parameters interface
 */
export interface IItemsIssuesListParams {
  processingResultId: string;
  bookmark?: string;
  pageSize?: number;
  itemNumbers?: Array<number>;
  itemValidationIssue?: CatalogsItemValidationIssue;
  adAccountId?: string;
}

/**
 * itemsPost - parameters interface
 */
export interface IItemsPostParams {
  catalogsItemsRequest: CatalogsItemsRequest;
  adAccountId?: string;
}

/**
 * productsByProductGroupFilterList - parameters interface
 */
export interface IProductsByProductGroupFilterListParams {
  catalogsListProductsByFilterRequest: CatalogsListProductsByFilterRequest;
  bookmark?: string;
  pageSize?: number;
  adAccountId?: string;
  pinMetrics?: boolean;
}

/**
 * reportsCreate - parameters interface
 */
export interface IReportsCreateParams {
  catalogsReportParameters: CatalogsReportParameters;
  adAccountId?: string;
}

/**
 * reportsGet - parameters interface
 */
export interface IReportsGetParams {
  token: string;
  adAccountId?: string;
}

/**
 * reportsStats - parameters interface
 */
export interface IReportsStatsParams {
  parameters: CatalogsReportParameters;
  adAccountId?: string;
  pageSize?: number;
  bookmark?: string;
}

/**
 * CatalogsApi - API class
 */
@autoinject()
export class CatalogsApi extends Api {

  /**
   * Creates a new CatalogsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Create catalog
   * Create a new catalog owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;  Note: this API only supports the catalog type of HOTEL for now.
   * @param params.catalogsCreateRequest Request object used to created a feed.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsCreate(params: ICatalogsCreateParams): Promise<Catalog> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsCreate', params, 'catalogsCreateRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['catalogsCreateRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List catalogs
   * Fetch catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsList(params: ICatalogsListParams): Promise<CatalogsList200Response> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/catalogs`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List products by product group
   * Get a list of product pins for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.productGroupId Unique identifier of a product group
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.pinMetrics Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
   */
  async catalogsProductGroupPinsList(params: ICatalogsProductGroupPinsListParams): Promise<CatalogsProductGroupPinsList200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupPinsList', params, 'productGroupId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/{product_group_id}/products`
      .replace(`{${'product_group_id'}}`, encodeURIComponent(`${params['productGroupId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'ad_account_id': params['adAccountId'],
        'pin_metrics': params['pinMetrics'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Create product group
   * Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.multipleProductGroupsInner Request object used to create a single catalogs product groups.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsCreate(params: ICatalogsProductGroupsCreateParams): Promise<CatalogsVerticalProductGroup> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsCreate', params, 'multipleProductGroupsInner');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['multipleProductGroupsInner'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Create product groups
   * Create product group to use in Catalogs owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.multipleProductGroupsInner Request object used to create one or more catalogs product groups.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsCreateMany(params: ICatalogsProductGroupsCreateManyParams): Promise<Array<string>> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsCreateMany', params, 'multipleProductGroupsInner');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/multiple`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['multipleProductGroupsInner'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Delete product group
   * Delete a product group owned by the \&quot;operation user_account\&quot; from being in use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.productGroupId Unique identifier of a product group
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsDelete(params: ICatalogsProductGroupsDeleteParams): Promise<any> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsDelete', params, 'productGroupId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/{product_group_id}`
      .replace(`{${'product_group_id'}}`, encodeURIComponent(`${params['productGroupId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asDelete()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Delete product groups
   * Delete product groups owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.id Comma-separated list of product group ids
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsDeleteMany(params: ICatalogsProductGroupsDeleteManyParams): Promise<any> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsDeleteMany', params, 'id');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/multiple`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asDelete()
      // Set query parameters
      .withParams({ 
        'id': params['id'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get product group
   * Get a singe product group for a given Catalogs Product Group Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.productGroupId Unique identifier of a product group
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsGet(params: ICatalogsProductGroupsGetParams): Promise<CatalogsVerticalProductGroup> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsGet', params, 'productGroupId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/{product_group_id}`
      .replace(`{${'product_group_id'}}`, encodeURIComponent(`${params['productGroupId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List product groups
   * Get a list of product groups for a given Catalogs Feed Id owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.id Comma-separated list of product group ids
   * @param params.feedId Filter entities for a given feed_id. If not given, all feeds are considered.
   * @param params.catalogId Filter entities for a given catalog_id. If not given, all catalogs are considered.
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsList(params: ICatalogsProductGroupsListParams): Promise<CatalogsProductGroupsList200Response> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'id': params['id'],
        'feed_id': params['feedId'],
        'catalog_id': params['catalogId'],
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get product counts
   * Get a product counts for a given Catalogs Product Group owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.productGroupId Unique identifier of a product group
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsProductCountsGet(params: ICatalogsProductGroupsProductCountsGetParams): Promise<CatalogsProductGroupProductCountsVertical> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsProductCountsGet', params, 'productGroupId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/{product_group_id}/product_counts`
      .replace(`{${'product_group_id'}}`, encodeURIComponent(`${params['productGroupId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Update single product group
   * Update product group owned by the \&quot;operation user_account\&quot; to use in Catalogs. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.productGroupId Unique identifier of a product group
   * @param params.catalogsProductGroupsUpdateRequest Request object used to Update a catalogs product group.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async catalogsProductGroupsUpdate(params: ICatalogsProductGroupsUpdateParams): Promise<CatalogsVerticalProductGroup> {
    // Verify required parameters are set
    this.ensureParamIsSet('catalogsProductGroupsUpdate', params, 'productGroupId');
    this.ensureParamIsSet('catalogsProductGroupsUpdate', params, 'catalogsProductGroupsUpdateRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs/product_groups/{product_group_id}`
      .replace(`{${'product_group_id'}}`, encodeURIComponent(`${params['productGroupId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPatch()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['catalogsProductGroupsUpdateRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List feed processing results
   * Fetch a feed processing results owned by the \&quot;operation user_account\&quot;. Please note that for now the bookmark parameter is not functional and only the first page will be available until it is implemented in some release in the near future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.feedId Unique identifier of a feed
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedProcessingResultsList(params: IFeedProcessingResultsListParams): Promise<FeedProcessingResultsList200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('feedProcessingResultsList', params, 'feedId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds/{feed_id}/processing_results`
      .replace(`{${'feed_id'}}`, encodeURIComponent(`${params['feedId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Create feed
   * Create a new feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Please, be aware that \&quot;default_country\&quot; and \&quot;default_locale\&quot; are not required in the spec for forward compatibility but for now the API will not accept requests without those fields.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.feedsCreateRequest Request object used to created a feed.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedsCreate(params: IFeedsCreateParams): Promise<CatalogsFeed> {
    // Verify required parameters are set
    this.ensureParamIsSet('feedsCreate', params, 'feedsCreateRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['feedsCreateRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Delete feed
   * Delete a feed owned by the \&quot;operating user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
   * @param params.feedId Unique identifier of a feed
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedsDelete(params: IFeedsDeleteParams): Promise<any> {
    // Verify required parameters are set
    this.ensureParamIsSet('feedsDelete', params, 'feedId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds/{feed_id}`
      .replace(`{${'feed_id'}}`, encodeURIComponent(`${params['feedId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asDelete()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get feed
   * Get a single feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
   * @param params.feedId Unique identifier of a feed
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedsGet(params: IFeedsGetParams): Promise<CatalogsFeed> {
    // Verify required parameters are set
    this.ensureParamIsSet('feedsGet', params, 'feedId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds/{feed_id}`
      .replace(`{${'feed_id'}}`, encodeURIComponent(`${params['feedId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Ingest feed items
   * Ingest items for a given feed owned by the \&quot;operation user_account\&quot;.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;  Note: This endpoint is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.feedId Unique identifier of a feed
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedsIngest(params: IFeedsIngestParams): Promise<CatalogsFeedIngestion> {
    // Verify required parameters are set
    this.ensureParamIsSet('feedsIngest', params, 'feedId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds/{feed_id}/ingest`
      .replace(`{${'feed_id'}}`, encodeURIComponent(`${params['feedId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List feeds
   * Fetch feeds owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.catalogId Filter entities for a given catalog_id. If not given, all catalogs are considered.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedsList(params: IFeedsListParams): Promise<FeedsList200Response> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'catalog_id': params['catalogId'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Update feed
   * Update a feed owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  For Retail partners, refer to &lt;a href&#x3D;\&#39;https://help.pinterest.com/en/business/article/before-you-get-started-with-catalogs\&#39;&gt;Before you get started with Catalogs&lt;/a&gt;. For Hotel parterns, refer to &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Pinterest API for shopping&lt;/a&gt;.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.feedId Unique identifier of a feed
   * @param params.feedsUpdateRequest Request object used to update a feed.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async feedsUpdate(params: IFeedsUpdateParams): Promise<CatalogsFeed> {
    // Verify required parameters are set
    this.ensureParamIsSet('feedsUpdate', params, 'feedId');
    this.ensureParamIsSet('feedsUpdate', params, 'feedsUpdateRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs/feeds/{feed_id}`
      .replace(`{${'feed_id'}}`, encodeURIComponent(`${params['feedId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPatch()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['feedsUpdateRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get item batch status
   * Get a single catalogs items batch owned by the \&quot;operating user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
   * @param params.batchId Id of a catalogs items batch to fetch
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async itemsBatchGet(params: IItemsBatchGetParams): Promise<CatalogsItemsBatch> {
    // Verify required parameters are set
    this.ensureParamIsSet('itemsBatchGet', params, 'batchId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/items/batch/{batch_id}`
      .replace(`{${'batch_id'}}`, encodeURIComponent(`${params['batchId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Operate on item batch
   * This endpoint supports multiple operations on a set of one or more catalog items owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: - Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager. - The item UPSERT operation is restricted to users without a feed data source. If you plan to migrate item ingestion from feeds to the API, please reach out to your partner manager to get assistance.
   * @param params.itemsBatchPostRequest Request object used to create catalogs items in a batch
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async itemsBatchPost(params: IItemsBatchPostParams): Promise<CatalogsItemsBatch> {
    // Verify required parameters are set
    this.ensureParamIsSet('itemsBatchPost', params, 'itemsBatchPostRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs/items/batch`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['itemsBatchPostRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Authentication 'client_credentials' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get catalogs items
   * Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: this endpoint is deprecated and will be deleted soon. Please use &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/items/post\&#39;&gt;Get catalogs items (POST)&lt;/a&gt; instead.
   * @param params.country Country for the Catalogs Items
   * @param params.language Language for the Catalogs Items
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.itemIds This parameter is deprecated. Use filters instead.
   * @param params.filters Identifies items to be retrieved. This is a required parameter.
   */
  async itemsGet(params: IItemsGetParams): Promise<CatalogsItems> {
    // Verify required parameters are set
    this.ensureParamIsSet('itemsGet', params, 'country');
    this.ensureParamIsSet('itemsGet', params, 'language');

    // Create URL to call
    const url = `${this.basePath}/catalogs/items`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
        'country': params['country'],
        'language': params['language'],
        'item_ids': params['itemIds'],
        'filters': params['filters'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List item issues
   * List item validation issues for a given feed processing result owned by the \&quot;operation user_account\&quot;. Up to 20 random samples of affected items are returned for each error and warning code. Please note that for now query parameters \&#39;item_numbers\&#39; and \&#39;item_validation_issue\&#39; cannot be used simultaneously until it is implemented in some release in the future. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: To get a list of all affected items instead of sampled issues, please refer to &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/reports/create\&#39;&gt;Build catalogs report&lt;/a&gt; and &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/reports/get\&#39;&gt;Get catalogs report&lt;/a&gt; endpoints. Moreover, they support multiple types of catalogs.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.processingResultId Unique identifier of a feed processing result. It can be acquired from the \&quot;id\&quot; field of the \&quot;items\&quot; array within the response of the [List processing results for a given feed](/docs/api/v5/#operation/feed_processing_results/list).
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.itemNumbers Item number based on order of appearance in the Catalogs Feed. For example, \&#39;0\&#39; refers to first item found in a feed that was downloaded from a \&#39;location\&#39; specified during feed creation.
   * @param params.itemValidationIssue Filter item validation issues that have a given type of item validation issue.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async itemsIssuesList(params: IItemsIssuesListParams): Promise<ItemsIssuesList200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('itemsIssuesList', params, 'processingResultId');

    // Create URL to call
    const url = `${this.basePath}/catalogs/processing_results/{processing_result_id}/item_issues`
      .replace(`{${'processing_result_id'}}`, encodeURIComponent(`${params['processingResultId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'item_numbers': params['itemNumbers'],
        'item_validation_issue': params['itemValidationIssue'],
        'ad_account_id': params['adAccountId'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get catalogs items (POST)
   * Get the items of the catalog owned by the \&quot;operation user_account\&quot;. &lt;a href&#x3D;\&quot;/docs/api-features/shopping-overview/#Update%20items%20in%20batch\&quot; target&#x3D;\&quot;_blank\&quot;&gt;See detailed documentation here.&lt;/a&gt; - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: Access to the Creative Assets catalog type is restricted to a specific group of users. If you require access, please reach out to your partner manager.
   * @param params.catalogsItemsRequest Request object used to get catalogs items
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async itemsPost(params: IItemsPostParams): Promise<CatalogsItems> {
    // Verify required parameters are set
    this.ensureParamIsSet('itemsPost', params, 'catalogsItemsRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs/items`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['catalogsItemsRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List products by filter
   * List products Pins owned by the \&quot;operation user_account\&quot; that meet the criteria specified in the Catalogs Product Group Filter given in the request. - This endpoint has been implemented in POST to allow for complex filters. This specific POST endpoint is designed to be idempotent. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.  Note: This endpoint only supports RETAIL catalog at the moment.  &lt;a href&#x3D;\&#39;/docs/api-features/shopping-overview/\&#39;&gt;Learn more&lt;/a&gt;
   * @param params.catalogsListProductsByFilterRequest Object holding a group of filters for a catalog product group
   * @param params.bookmark Cursor used to fetch the next page of items
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.pinMetrics Specify whether to return 90d and lifetime Pin metrics. Total comments and total reactions are only available with lifetime Pin metrics. If Pin was created before &lt;code&gt;2023-03-20&lt;/code&gt; lifetime metrics will only be available for Video and Idea Pin formats. Lifetime metrics are available for all Pin formats since then.
   */
  async productsByProductGroupFilterList(params: IProductsByProductGroupFilterListParams): Promise<CatalogsProductGroupPinsList200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('productsByProductGroupFilterList', params, 'catalogsListProductsByFilterRequest');

    // Create URL to call
    const url = `${this.basePath}/catalogs/products/get_by_product_group_filters`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'bookmark': params['bookmark'],
        'page_size': params['pageSize'],
        'ad_account_id': params['adAccountId'],
        'pin_metrics': params['pinMetrics'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['catalogsListProductsByFilterRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Build catalogs report
   * Async request to create a report of the catalog owned by the \&quot;operation user_account\&quot;. This endpoint generates a report upon receiving the first approved request of the day. Any following requests with identical parameters will yield the same report even if data has changed. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
   * @param params.catalogsReportParameters Request object to asynchronously create a report.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async reportsCreate(params: IReportsCreateParams): Promise<CatalogsCreateReportResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('reportsCreate', params, 'catalogsReportParameters');

    // Create URL to call
    const url = `${this.basePath}/catalogs/reports`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
      })
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['catalogsReportParameters'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get catalogs report
   * This returns a URL to a report given a token returned from &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/reports/create\&#39;&gt;Build catalogs report&lt;/a&gt;. You can use the URL to download the report. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
   * @param params.token Token returned from async build report call
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async reportsGet(params: IReportsGetParams): Promise<CatalogsReport> {
    // Verify required parameters are set
    this.ensureParamIsSet('reportsGet', params, 'token');

    // Create URL to call
    const url = `${this.basePath}/catalogs/reports`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
        'token': params['token'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * List report stats
   * List aggregated numbers of issues for a catalog owned by the \&quot;operation user_account\&quot;. - By default, the \&quot;operation user_account\&quot; is the token user_account.  Optional: Business Access: Specify an &lt;code&gt;ad_account_id&lt;/code&gt; (obtained via &lt;a href&#x3D;\&#39;/docs/api/v5/#operation/ad_accounts/list\&#39;&gt;List ad accounts&lt;/a&gt;) to use the owner of that ad_account as the \&quot;operation user_account\&quot;. In order to do this, the token user_account must have one of the following &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/share-and-manage-access-to-your-ad-accounts\&quot;&gt;Business Access&lt;/a&gt; roles on the ad_account: Owner, Admin, Catalogs Manager.
   * @param params.parameters Contains the parameters for report identification.
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.bookmark Cursor used to fetch the next page of items
   */
  async reportsStats(params: IReportsStatsParams): Promise<ReportsStats200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('reportsStats', params, 'parameters');

    // Create URL to call
    const url = `${this.basePath}/catalogs/reports/stats`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'ad_account_id': params['adAccountId'],
        'page_size': params['pageSize'],
        'bookmark': params['bookmark'],
        'parameters': params['parameters'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

