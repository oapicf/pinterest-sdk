/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  CustomerListUpdateRequest,
  CustomerListsList200Response,
  CustomerList,
  CustomerListRequest,
} from './models';

/**
 * customerListsCreate - parameters interface
 */
export interface ICustomerListsCreateParams {
  adAccountId: string;
  customerListRequest: CustomerListRequest;
}

/**
 * customerListsGet - parameters interface
 */
export interface ICustomerListsGetParams {
  adAccountId: string;
  customerListId: string;
}

/**
 * customerListsList - parameters interface
 */
export interface ICustomerListsListParams {
  adAccountId: string;
  pageSize?: number;
  order?: 'ASCENDING' | 'DESCENDING';
  bookmark?: string;
}

/**
 * customerListsUpdate - parameters interface
 */
export interface ICustomerListsUpdateParams {
  adAccountId: string;
  customerListId: string;
  customerListUpdateRequest: CustomerListUpdateRequest;
}

/**
 * CustomerListsApi - API class
 */
@autoinject()
export class CustomerListsApi extends Api {

  /**
   * Creates a new CustomerListsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Create customer lists
   * &lt;p&gt;Create a customer list from your records(hashed or plain-text email addresses, or hashed MAIDs or IDFAs).&lt;/p&gt; &lt;p&gt;A customer list is one of the four types of Pinterest audiences: for more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt; or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;p/&gt;  &lt;p&gt;&lt;b&gt;Please review our &lt;u&gt;&lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting#section-13341\&quot; target&#x3D;\&quot;_blank\&quot;&gt;requirements&lt;/a&gt;&lt;/u&gt; for what type of information is allowed when uploading a customer list.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;When you create a customer list, the system scans the list for existing Pinterest accounts; the list must include at least 100 Pinterest accounts. Your original list will be deleted when the matching process is complete. The filtered list – containing only the Pinterest accounts that were included in your starting list – is what will be used to create the audience.&lt;/p&gt; &lt;p&gt;Note that once you have created your customer list, you must convert it into an audience (of the “ CUSTOMER_LIST” type) using the &lt;a href&#x3D;\&quot;#operation/create_audience_handler\&quot;&gt;create audience endpoint&lt;/a&gt; before it can be used.&lt;/p&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.customerListRequest Parameters to get Customer lists info
   */
  async customerListsCreate(params: ICustomerListsCreateParams): Promise<CustomerList> {
    // Verify required parameters are set
    this.ensureParamIsSet('customerListsCreate', params, 'adAccountId');
    this.ensureParamIsSet('customerListsCreate', params, 'customerListRequest');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/customer_lists`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['customerListRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get customer list
   * Gets a specific customer list given the customer list ID.
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.customerListId Unique identifier of a customer list
   */
  async customerListsGet(params: ICustomerListsGetParams): Promise<CustomerList> {
    // Verify required parameters are set
    this.ensureParamIsSet('customerListsGet', params, 'adAccountId');
    this.ensureParamIsSet('customerListsGet', params, 'customerListId');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`))
      .replace(`{${'customer_list_id'}}`, encodeURIComponent(`${params['customerListId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get customer lists
   * &lt;p&gt;Get a set of customer lists including id and name based on the filters provided.&lt;/p&gt; &lt;p&gt;(Customer lists are a type of audience.) For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt;  or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;/p&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.order The order in which to sort the items returned: “ASCENDING” or “DESCENDING” by ID. Note that higher-value IDs are associated with more-recently added items.
   * @param params.bookmark Cursor used to fetch the next page of items
   */
  async customerListsList(params: ICustomerListsListParams): Promise<CustomerListsList200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('customerListsList', params, 'adAccountId');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/customer_lists`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'page_size': params['pageSize'],
        'order': params['order'],
        'bookmark': params['bookmark'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Update customer list
   * &lt;p&gt;Append or remove records to/from an existing customer list. (A customer list is one of the four types of Pinterest audiences.)&lt;/p&gt; &lt;p&gt;When you add records to an existing customer list, the system scans the additions for existing Pinterest accounts; those are the records that will be added to your “CUSTOMER_LIST” audience. Your original list of records  to add will be deleted when the matching process is complete.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-targeting\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audience targeting&lt;/a&gt; or the &lt;a href&#x3D;\&quot;/docs/api-features/targeting-overview/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Audiences&lt;/a&gt; section of the ads management guide.&lt;/p&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.customerListId Unique identifier of a customer list
   * @param params.customerListUpdateRequest 
   */
  async customerListsUpdate(params: ICustomerListsUpdateParams): Promise<CustomerList> {
    // Verify required parameters are set
    this.ensureParamIsSet('customerListsUpdate', params, 'adAccountId');
    this.ensureParamIsSet('customerListsUpdate', params, 'customerListId');
    this.ensureParamIsSet('customerListsUpdate', params, 'customerListUpdateRequest');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/customer_lists/{customer_list_id}`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`))
      .replace(`{${'customer_list_id'}}`, encodeURIComponent(`${params['customerListId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPatch()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['customerListUpdateRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

