/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  AudienceInsightsResponse,
  AudienceDefinitionResponse,
  AudienceInsightType,
} from './models';

/**
 * audienceInsightsGet - parameters interface
 */
export interface IAudienceInsightsGetParams {
  adAccountId: string;
  audienceInsightType: AudienceInsightType;
}

/**
 * audienceInsightsScopeAndTypeGet - parameters interface
 */
export interface IAudienceInsightsScopeAndTypeGetParams {
  adAccountId: string;
}

/**
 * AudienceInsightsApi - API class
 */
@autoinject()
export class AudienceInsightsApi extends Api {

  /**
   * Creates a new AudienceInsightsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Get audience insights
   * Get Audience Insights for an ad account. The response will return insights for 3 types of audiences: the ad account\&#39;s engaged audience on Pinterest, the ad account\&#39;s total audience on Pinterest and Pinterest\&#39;s total audience.&lt;p/&gt; &lt;a href&#x3D;\&quot;https://help.pinterest.com/en/business/article/audience-insights\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Learn more about Audience Insights&lt;/a&gt;.
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.audienceInsightType Type of audience insights.
   */
  async audienceInsightsGet(params: IAudienceInsightsGetParams): Promise<AudienceInsightsResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('audienceInsightsGet', params, 'adAccountId');
    this.ensureParamIsSet('audienceInsightsGet', params, 'audienceInsightType');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/audience_insights`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'audience_insight_type': params['audienceInsightType'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get audience insights scope and type
   * Get the scope and type of available audiences, which along with a date, is an audience that has recently had an interaction (referred to here as a type) on pins. Interacted pins can belong to at least the most common **partner** or **Pinterest** scopes. This means that user interactions made on advertiser or partner pins will have the **partner** scope. You can also have user interactions performed in general on Pinterest with the **Pinterest** scope. In that case, you can then use the returned type and scope values together on requests to other endpoints to retrieve insight metrics for a desired audience.
   * @param params.adAccountId Unique identifier of an ad account.
   */
  async audienceInsightsScopeAndTypeGet(params: IAudienceInsightsScopeAndTypeGetParams): Promise<AudienceDefinitionResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('audienceInsightsScopeAndTypeGet', params, 'adAccountId');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/insights/audiences`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

