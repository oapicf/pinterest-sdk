/**
 * Pinterest REST API
 * Pinterest\'s REST API
 *
 * The version of the OpenAPI document: 5.14.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  AdAccountGetSubscriptionResponse,
  AdAccountCreateSubscriptionResponse,
  AdAccountsSubscriptionsGetList200Response,
  AdAccountCreateSubscriptionRequest,
} from './models';

/**
 * adAccountsSubscriptionsDelById - parameters interface
 */
export interface IAdAccountsSubscriptionsDelByIdParams {
  adAccountId: string;
  subscriptionId: string;
}

/**
 * adAccountsSubscriptionsGetById - parameters interface
 */
export interface IAdAccountsSubscriptionsGetByIdParams {
  adAccountId: string;
  subscriptionId: string;
}

/**
 * adAccountsSubscriptionsGetList - parameters interface
 */
export interface IAdAccountsSubscriptionsGetListParams {
  adAccountId: string;
  pageSize?: number;
  bookmark?: string;
}

/**
 * adAccountsSubscriptionsPost - parameters interface
 */
export interface IAdAccountsSubscriptionsPostParams {
  adAccountId: string;
  adAccountCreateSubscriptionRequest: AdAccountCreateSubscriptionRequest;
}

/**
 * LeadAdsApi - API class
 */
@autoinject()
export class LeadAdsApi extends Api {

  /**
   * Creates a new LeadAdsApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Delete lead ads subscription
   * Delete an existing lead ads webhook subscription by ID. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.subscriptionId Unique identifier of a subscription.
   */
  async adAccountsSubscriptionsDelById(params: IAdAccountsSubscriptionsDelByIdParams): Promise<any> {
    // Verify required parameters are set
    this.ensureParamIsSet('adAccountsSubscriptionsDelById', params, 'adAccountId');
    this.ensureParamIsSet('adAccountsSubscriptionsDelById', params, 'subscriptionId');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`))
      .replace(`{${'subscription_id'}}`, encodeURIComponent(`${params['subscriptionId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asDelete()

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get lead ads subscription
   * Get a specific lead ads subscription record. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.subscriptionId Unique identifier of a subscription.
   */
  async adAccountsSubscriptionsGetById(params: IAdAccountsSubscriptionsGetByIdParams): Promise<AdAccountGetSubscriptionResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('adAccountsSubscriptionsGetById', params, 'adAccountId');
    this.ensureParamIsSet('adAccountsSubscriptionsGetById', params, 'subscriptionId');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/leads/subscriptions/{subscription_id}`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`))
      .replace(`{${'subscription_id'}}`, encodeURIComponent(`${params['subscriptionId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Get lead ads subscriptions
   * Get the advertiser\&#39;s list of lead ads subscriptions. - Only requests for the OWNER or ADMIN of the ad_account will be allowed.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.pageSize Maximum number of items to include in a single page of the response. See documentation on &lt;a href&#x3D;\&#39;/docs/reference/pagination/\&#39;&gt;Pagination&lt;/a&gt; for more information.
   * @param params.bookmark Cursor used to fetch the next page of items
   */
  async adAccountsSubscriptionsGetList(params: IAdAccountsSubscriptionsGetListParams): Promise<AdAccountsSubscriptionsGetList200Response> {
    // Verify required parameters are set
    this.ensureParamIsSet('adAccountsSubscriptionsGetList', params, 'adAccountId');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/leads/subscriptions`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()
      // Set query parameters
      .withParams({ 
        'page_size': params['pageSize'],
        'bookmark': params['bookmark'],
      })

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

  /**
   * Create lead ads subscription
   * Create a lead ads webhook subscription. Subscriptions allow Pinterest to deliver lead data from Ads Manager directly to the subscriber. Subscriptions can exist for a specific lead form or at ad account level. - Only requests for the OWNER or ADMIN of the ad_account will be allowed. - Advertisers can set up multiple integrations using ad_account_id + lead_form_id but only one integration per unique records. - For data security, egress lead data is encrypted with AES-256-GCM.  &lt;strong&gt;This endpoint is currently in beta and not available to all apps. &lt;a href&#x3D;\&#39;/docs/getting-started/beta-and-advanced-access/\&#39;&gt;Learn more&lt;/a&gt;.&lt;/strong&gt;
   * @param params.adAccountId Unique identifier of an ad account.
   * @param params.adAccountCreateSubscriptionRequest Subscription to create.
   */
  async adAccountsSubscriptionsPost(params: IAdAccountsSubscriptionsPostParams): Promise<AdAccountCreateSubscriptionResponse> {
    // Verify required parameters are set
    this.ensureParamIsSet('adAccountsSubscriptionsPost', params, 'adAccountId');
    this.ensureParamIsSet('adAccountsSubscriptionsPost', params, 'adAccountCreateSubscriptionRequest');

    // Create URL to call
    const url = `${this.basePath}/ad_accounts/{ad_account_id}/leads/subscriptions`
      .replace(`{${'ad_account_id'}}`, encodeURIComponent(`${params['adAccountId']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asPost()
      // Encode body parameter
      .withHeader('content-type', 'application/json')
      .withContent(JSON.stringify(params['adAccountCreateSubscriptionRequest'] || {}))

      // Authentication 'pinterest_oauth2' required
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

